From 5f4adbc3aa3408856b5d494f613465bd659b41f5 Mon Sep 17 00:00:00 2001
From: Eli Huang <Eli_Huang@wiwynn.com>
Date: Thu, 22 Dec 2022 09:03:59 +0800
Subject: [PATCH] Add MCTP_BTU size to match the bic setting

---
 asti3c.c  | 4 ++--
 libmctp.h | 1 +
 2 files changed, 3 insertions(+), 2 deletions(-)

diff --git a/asti3c.c b/asti3c.c
index bc89e10..2e5c911 100644
--- a/asti3c.c
+++ b/asti3c.c
@@ -50,7 +50,7 @@ struct mctp_binding_asti3c *mctp_asti3c_init(void)
 	asti3c->binding.name = "asti3c";
 	asti3c->binding.version = 1;
 	asti3c->binding.tx = mctp_asti3c_tx;
-	asti3c->binding.pkt_size = MCTP_PACKET_SIZE(MCTP_BTU);
+	asti3c->binding.pkt_size = MCTP_PACKET_SIZE(MCTP_I3C_BTU);
 	asti3c->binding.pkt_priv_size = sizeof(struct mctp_asti3c_pkt_private);
 
 	return asti3c;
@@ -107,7 +107,7 @@ int mctp_asti3c_rx(struct mctp_binding_asti3c *asti3c, int fd)
 	/* PEC is verified at hardware level and does not
 	propogate to userspace, thus do not deal with PEC byte */
 
-	if ((read_len > (MCTP_BTU + MCTP_HEADER_SIZE)) ||
+	if ((read_len > (MCTP_I3C_BTU + MCTP_HEADER_SIZE)) ||
 	    (read_len < (MCTP_HEADER_SIZE))) {
 		mctp_prerr("Incorrect packet size: %zd", read_len);
 		return -1;
diff --git a/libmctp.h b/libmctp.h
index fde98f5..3571b2d 100644
--- a/libmctp.h
+++ b/libmctp.h
@@ -51,6 +51,7 @@ struct mctp_hdr {
 
 /* Baseline Transmission Unit and packet size */
 #define MCTP_BTU 64
+#define MCTP_I3C_BTU 256
 #define MCTP_PACKET_SIZE(unit) ((unit) + sizeof(struct mctp_hdr))
 
 #define TX_DISABLED_ERR (-1024)
-- 
2.25.1

