From 656224ca916c2e27c6b0ae947e5f2b6a6618665d Mon Sep 17 00:00:00 2001
From: peteryin <peter.yin@quantatw.com>
Date: Thu, 11 May 2023 16:34:43 +0800
Subject: [PATCH] change bitbang to signal bit

---
 drivers/jtag/jtag-aspeed.c | 12 ++++--------
 drivers/jtag/jtag.c        | 28 +++++++---------------------
 include/linux/jtag.h       |  3 +--
 3 files changed, 12 insertions(+), 31 deletions(-)

diff --git a/drivers/jtag/jtag-aspeed.c b/drivers/jtag/jtag-aspeed.c
index 6701787dd..b80ac7387 100644
--- a/drivers/jtag/jtag-aspeed.c
+++ b/drivers/jtag/jtag-aspeed.c
@@ -463,17 +463,13 @@ static char aspeed_jtag_tck_cycle(struct aspeed_jtag *aspeed_jtag, u8 tms,
 }
 
 static int aspeed_jtag_bitbang(struct jtag *jtag,
-			       struct bitbang_packet *bitbang,
-			       struct tck_bitbang *bitbang_data)
+					struct tck_bitbang *tck_bitbang)
 {
 	struct aspeed_jtag *aspeed_jtag = jtag_priv(jtag);
-	int i = 0;
 
-	for (i = 0; i < bitbang->length; i++) {
-		bitbang_data[i].tdo =
-			aspeed_jtag_tck_cycle(aspeed_jtag, bitbang_data[i].tms,
-					      bitbang_data[i].tdi);
-	}
+	tck_bitbang->tdo = aspeed_jtag_tck_cycle(aspeed_jtag,
+						tck_bitbang->tms,
+						tck_bitbang->tdi);
 	return 0;
 }
 
diff --git a/drivers/jtag/jtag.c b/drivers/jtag/jtag.c
index d4f0250d5..435aad538 100644
--- a/drivers/jtag/jtag.c
+++ b/drivers/jtag/jtag.c
@@ -34,8 +34,7 @@ static long jtag_ioctl(struct file *file, unsigned int cmd, unsigned long arg)
 	struct jtag *jtag = file->private_data;
 	struct jtag_tap_state tapstate;
 	struct jtag_xfer xfer;
-	struct bitbang_packet bitbang;
-	struct tck_bitbang *bitbang_data;
+	struct tck_bitbang bitbang;
 	struct jtag_mode mode;
 	u8 *xfer_data;
 	u32 data_size;
@@ -155,27 +154,14 @@ static long jtag_ioctl(struct file *file, unsigned int cmd, unsigned long arg)
 		break;
 	case JTAG_IOCBITBANG:
 		if (copy_from_user(&bitbang, (const void __user *)arg,
-				   sizeof(struct bitbang_packet)))
+				   sizeof(struct tck_bitbang)))
 			return -EFAULT;
-
-		if (bitbang.length >= JTAG_MAX_XFER_DATA_LEN)
-			return -EINVAL;
-
-		data_size = bitbang.length * sizeof(struct tck_bitbang);
-		bitbang_data = memdup_user((void __user *)bitbang.data,
-					   data_size);
-		if (IS_ERR(bitbang_data))
-			return -EFAULT;
-
-		err = jtag->ops->bitbang(jtag, &bitbang, bitbang_data);
-		if (err) {
-			kfree(bitbang_data);
-			return err;
-		}
-		err = copy_to_user((void __user *)bitbang.data,
-				   (void *)bitbang_data, data_size);
-		kfree(bitbang_data);
+		err = jtag->ops->bitbang(jtag, &bitbang);
 		if (err)
+			break;
+
+		if (copy_to_user((void __user *)arg, (void *)&bitbang,
+				 sizeof(struct tck_bitbang)))
 			return -EFAULT;
 		break;
 	case JTAG_SIOCMODE:
diff --git a/include/linux/jtag.h b/include/linux/jtag.h
index fab12dc4f..660b66451 100644
--- a/include/linux/jtag.h
+++ b/include/linux/jtag.h
@@ -32,8 +32,7 @@ struct jtag_ops {
 	int (*status_set)(struct jtag *jtag, struct jtag_tap_state *endst);
 	int (*xfer)(struct jtag *jtag, struct jtag_xfer *xfer, u8 *xfer_data);
 	int (*mode_set)(struct jtag *jtag, struct jtag_mode *jtag_mode);
-	int (*bitbang)(struct jtag *jtag, struct bitbang_packet *bitbang,
-		       struct tck_bitbang *bitbang_data);
+	int (*bitbang)(struct jtag *jtag, struct tck_bitbang *tck_bitbang);
 	int (*enable)(struct jtag *jtag);
 	int (*disable)(struct jtag *jtag);
 };
-- 
2.25.1

