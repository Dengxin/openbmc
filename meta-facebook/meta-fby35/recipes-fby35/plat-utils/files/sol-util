#!/bin/bash
#
# Copyright 2014-present Facebook. All Rights Reserved.
#
# This program file is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program in a file named COPYING; if not, write to the
# Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor,
# Boston, MA 02110-1301 USA
#

# shellcheck source=meta-facebook/meta-fby35/recipes-fby35/plat-utils/files/ast-functions
. /usr/local/fbpackages/utils/ast-functions

LOGFILE="/var/log/mTerm_$1.log"
LOGFILE_B="/var/log/mTerm_$1_backup.log"
I2CSET="/usr/sbin/i2cset -y "

SB_CPLD_ADDR="0x0f"
BOARD_ID=$(get_bmc_board_id)

SLOT=
SLOT_NUM=
I2C_NUM=

IFS=" " read -r -a IANA_ARR <<< "$(echo "$IANA_ID" | tr ' ')"

show_usage() {
  echo "Usage: sol-util [ slot1 | slot2 | slot3 | slot4 ]"
  echo "       sol-util [ slot1 | slot2 | slot3 | slot4 ] [sb, bb, 1ou, 2ou, 3ou, 4ou] bic"
  echo "       sol-util [ slot1 | slot3 ] 1ou  cxl"
  if [ "$(is_prot_prsnt 1)" == "1" ] || [ "$(is_prot_prsnt 3)" == "1" ]; then
    echo "       sol-util [ slot1 | slot3 ] sb   prot"
  fi
  echo "       sol-util [ slot1 | slot2 | slot3 | slot4 ] --history"
}

get_slot_num() {
  local slot_num=0
  case $1 in
    slot1)
      slot_num=1
    ;;
    slot2)
      slot_num=2
    ;;
    slot3)
      slot_num=3
    ;;
    slot4)
      slot_num=4
    ;;
  esac

  echo $slot_num
}

get_bus_num() {
  local bus=0
  case $1 in
    slot1)
      bus=4
    ;;
    slot2)
      bus=5
    ;;
    slot3)
      bus=6
    ;;
    slot4)
      bus=7
    ;;
  esac

  echo $bus
}

set_uart_src() {
  local bus=$1
  local addr=$2
  local data=$3
  local data2=$4

  $I2CSET "$bus" "$addr" "$data" "$data2"
}

# Only support slot[1|2|3|4]
if [[ "$1" =~ ^(slot[1-4]{1})$ ]]; then
  SLOT=$1
else
  show_usage
  exit 255
fi

# If users want to read a history, there is no need to run the rest
if [[ "$2" == "--history" ]]; then
  if [ $# -eq 2 ]; then
    cat "$LOGFILE_B" "$LOGFILE" 2>/dev/null
    exit 0;
  else
    show_usage
    exit 255
  fi
fi

SLOT_NUM=$(get_slot_num "$SLOT")
I2C_NUM=$(get_bus_num "$SLOT")
SLED_TYPE="$(/usr/bin/kv get "sled_system_conf" persistent)"
COMP=$2
DEV=$3
BAUDRATE=$4
CPLD_ADDR=
DEV_NUM=
OP_IOEXP_BUS="4"
OP_1OU_IOEXP_ADDR="0x26"
OP_3OU_IOEXP_ADDR="0x27"
CLASS1_SB_BIC_CHANNEL="0x4"

# Set back to default 57600
/bin/stty -F "/dev/ttyS$SLOT_NUM" 57600 >/dev/null 2>&1

if [[ "$SLED_TYPE" == "Type_17" ]]; then
  if ! [ "$SLOT" == "slot1" ]; then
    echo "$SLOT is empty"
    exit 255
  else
    # notify CPLD to set the uart src to class 2
    set_uart_src "$I2C_NUM" "$SB_CPLD_ADDR" 0x00 0x02
  fi
else
  if [ "$(is_server_prsnt "${SLOT_NUM}")" == "0" ]; then
    echo "The $SLOT is empty"
    exit 255
  elif [ "$(is_slot_12v_on "${SLOT_NUM}")" == "0" ]; then
    echo "The $SLOT is 12V-off"
    exit 255
  else
    # notify CPLD to set the uart src to class 1
    set_uart_src "$I2C_NUM" "$SB_CPLD_ADDR" 0x00 0x01
  fi
fi

# check COMP and DEV
if [ -n "$COMP" ]; then
  # block invalid command, e.g. sol-util 2ou bic xxx
  if [ $# -gt 4 ]; then
    show_usage
    exit 255
  fi

  # check BAUDRATE is a number
  if [ -n "$BAUDRATE" ]; then
    if ! [[ "$BAUDRATE" =~ ^[0-9]+$ ]]; then
      echo "$BAUDRATE should be a number"
      exit 255
    fi
  fi

  # check COMP first
  if [ "$COMP" == "sb" ] || [ "$COMP" == "bb" ] ||
     [[ "$COMP" == "1ou" && ! "$SLED_TYPE" =~ ^(Type_(1|17|8))$ ]]; then
    CPLD_ADDR=${SB_CPLD_ADDR}
  elif [ "$SLED_TYPE" == "Type_8" ]; then
    # Omstead point select UART MUX by IO EXP
    CPLD_ADDR="${SB_CPLD_ADDR}"
    case $COMP in
      1ou)
        exp_addr="$OP_1OU_IOEXP_ADDR"
        exp_mux_ctrl=0xFF
        uart_ch=0x5
      ;;
      2ou)
        exp_addr="$OP_1OU_IOEXP_ADDR"
        exp_mux_ctrl=0xF7
        uart_ch=0x5
      ;;
      3ou)
        exp_addr="$OP_3OU_IOEXP_ADDR"
        exp_mux_ctrl=0xFF
        uart_ch=0x2
      ;;
      4ou)
        exp_addr="$OP_3OU_IOEXP_ADDR"
        exp_mux_ctrl=0xF7
        uart_ch=0x2
      ;;
    esac
    /usr/sbin/i2cset -y $OP_IOEXP_BUS $exp_addr 0x1 $exp_mux_ctrl # Set MUX value
    /usr/sbin/i2cset -y $OP_IOEXP_BUS $exp_addr 0x3 0xF7 # Set direction
  else
    echo "$COMP is not supported!"
    exit 255
  fi

  # check DEV
  if [ "$DEV" == "bic" ]; then
    if [ -n "$CPLD_ADDR" ]; then
      if [ "$BOARD_ID" == "$BMC_ID_CLASS2" ] ; then #For sol-util BIC console, class2 uart sb bic: 0x2 bb bic: 0x4, class1 uart sb bic: 0x4
        if [ "$COMP" == "sb" ]; then
          DEV_NUM="0x2"
        else
          DEV_NUM="0x4"
        fi
      elif [ "$SLED_TYPE" == "Type_8" ]; then
        if [ "$COMP" == "sb" ]; then
          DEV_NUM="$CLASS1_SB_BIC_CHANNEL"
        else
          DEV_NUM="$uart_ch"
        fi
      elif [ "$COMP" == "1ou" ]; then
        DEV_NUM="0x1"
      else
        DEV_NUM="0x4"
      fi
    fi
  elif [ "$DEV" == "prot" ] && [ "$COMP" == "sb" ] && [ "$(is_prot_prsnt "$SLOT_NUM")" == "1" ]; then
    DEV_NUM="0x6"
  elif [ "$DEV" == "cxl" ] && [ "$COMP" == "1ou" ] ; then
    /bin/stty -F "/dev/ttyS$SLOT_NUM" 115200 >/dev/null 2>&1
    CPLD_ADDR=${SB_CPLD_ADDR}
    DEV_NUM="0x5"
  else
    echo "$DEV is not supported!"
    exit 255
  fi

  if [ -n "$CPLD_ADDR" ]; then
    set_uart_src "$I2C_NUM" "$CPLD_ADDR" 0x01 $DEV_NUM
    if [ "$BOARD_ID" == "$BMC_ID_CLASS2" ]; then
      if [ "$COMP" == "sb" ]; then
        set_uart_src "$I2C_NUM" 0x0e 0x29 0x0
      else
        SLOT_INDEX="$(/usr/bin/bic-util slot1 0xE0 0x02 "${IANA_ARR[0]}" "${IANA_ARR[1]}" "${IANA_ARR[2]}" 0x10 0xC0 0xF0 | cut -d " " -f 8)"
        if [ "$SLOT_INDEX" == "01" ]; then  #For Class2 BMC UART to BB BIC MUX slot1 0x1, slot3 0x2
          set_uart_src "$I2C_NUM" 0x0e 0x29 0x01
        else
          set_uart_src "$I2C_NUM" 0x0e 0x29 0x02
        fi
      fi
    fi
  else
    # redirect the uart src to an expansion board
    if [ "$COMP" == "1ou" ]; then
      set_uart_src "$I2C_NUM" "$SB_CPLD_ADDR" 0x01 0x01
    else
      set_uart_src "$I2C_NUM" "$SB_CPLD_ADDR" 0x01 0x02
    fi
  fi
else
  set_uart_src "$I2C_NUM" "$SB_CPLD_ADDR" 0x01 0x03
fi

if [ "$(get_slot_type "$SLOT_NUM")" == "0" ]; then
  # set UART clock source 24MHz
  devmem_clear_bit "$(scu_addr 310)" "$((SLOT_NUM - 1))"
fi

exec /usr/local/bin/mTerm_client "$SLOT"

echo
echo
echo "-----------------------"
echo "Exit from SOL session."
